plugins {
	id 'fabric-loom' version '1.6-SNAPSHOT'
	id 'maven-publish'
}

version = "${mc_version}-${mod_version}.refabricated"
group = project.maven_group

base {
	archivesName = "EndersDelight"
}

repositories {
	mavenLocal()

	maven {
		// Farmer's Delight Refabricated
		name = "Greenhouse Maven"
		url = 'https://repo.greenhouse.house/releases/'
	}

	maven { url "https://cursemaven.com" }

	maven { url "https://maven.parchmentmc.org" }

	maven {
		url = "https://api.modrinth.com/maven"
	}

	maven {
		// CraftTweaker, JEI
		name = "BlameJared"
		url = "https://maven.blamejared.com/"
	}
	maven { url "https://maven.ryanliptak.com/" } // AppleSkin


	maven { url = "https://maven.parchmentmc.org" } // Parchment
	maven { url = "https://maven.fabricmc.net/" } // FAPI, Loader
	maven { url = "https://mvn.devos.one/snapshots/" } // Registrate, Porting Lib, Forge Tags, Milk Lib
	maven { url = "https://mvn.devos.one/releases/" }
	maven { // for Porting Lib: Fabric ASM
		url = "https://jitpack.io/"
	}
	maven { url = "https://maven.shedaniel.me/" } // REI and deps
	maven { url = "https://maven.terraformersmc.com/" } // Mod Menu, EMI
	maven { // Reach Entity Attributes
		url = "https://maven.jamieswhiteshirt.com/libs-release"
		content { includeGroup("com.jamieswhiteshirt") }
	}
	mavenCentral() // Mixin Extras
}

dependencies {
	minecraft "com.mojang:minecraft:${mc_version}"
	mappings loom.layered() {
		it.officialMojangMappings {
			setNameSyntheticMembers(false)
		}
		parchment("org.parchmentmc.data:parchment-1.20.1:2023.09.03@zip")
	}
	modImplementation "net.fabricmc:fabric-loader:${loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"

	modImplementation("vectorwing:FarmersDelight:${farmersdelight_version}+refabricated") {
		exclude(group: "net.fabricmc")
	}

	modLocalRuntime("com.terraformersmc:modmenu:${modmenu_version}")

}


processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}